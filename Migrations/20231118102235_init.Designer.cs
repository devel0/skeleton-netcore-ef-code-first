// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using skeleton_netcore_ef_code_first;

#nullable disable

namespace skeleton_netcore_ef_code_first.Migrations
{
    [DbContext(typeof(LocalDbContext))]
    [Migration("20231118102235_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TableE_ManyTableF_Many", b =>
                {
                    b.Property<int>("EObjectsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FObjectsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EObjectsId", "FObjectsId");

                    b.HasIndex("FObjectsId");

                    b.ToTable("TableE_ManyTableF_Many");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableA_One", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BObjectId")
                        .IsUnique();

                    b.ToTable("ARecords");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableB_One", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BRecords");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableC_One", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CRecords");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableD_Many", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CObjectId");

                    b.ToTable("DRecords");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableE_Many", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ERecords");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableF_Many", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FRecords");
                });

            modelBuilder.Entity("TableE_ManyTableF_Many", b =>
                {
                    b.HasOne("skeleton_netcore_ef_code_first.TableE_Many", null)
                        .WithMany()
                        .HasForeignKey("EObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("skeleton_netcore_ef_code_first.TableF_Many", null)
                        .WithMany()
                        .HasForeignKey("FObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableA_One", b =>
                {
                    b.HasOne("skeleton_netcore_ef_code_first.TableB_One", "BObject")
                        .WithOne("AObject")
                        .HasForeignKey("skeleton_netcore_ef_code_first.TableA_One", "BObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BObject");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableD_Many", b =>
                {
                    b.HasOne("skeleton_netcore_ef_code_first.TableC_One", "CObject")
                        .WithMany("DObjects")
                        .HasForeignKey("CObjectId");

                    b.Navigation("CObject");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableB_One", b =>
                {
                    b.Navigation("AObject");
                });

            modelBuilder.Entity("skeleton_netcore_ef_code_first.TableC_One", b =>
                {
                    b.Navigation("DObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
